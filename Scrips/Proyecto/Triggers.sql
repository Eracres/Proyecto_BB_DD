CREATE OR REPLACE TRIGGER control_producto
	BEFORE INSERT OR UPDATE OR DELETE ON PRODUCTO
    FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'TABLA PRODUCTO','Producto nuevo registrado con nº ' || :new.C_PRODUCTO);
		ELSIF UPDATING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'TABLA PRODUCTO','Producto nº ' || :old.C_PRODUCTO || ' modificado');
		ELSIF DELETING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'TABLA PRODUCTO','Producto nº ' || :old.C_PRODUCTO || ' borrado');
		END IF;
	END;
/

--Trigger de control de la tabla CLIENTE--

CREATE OR REPLACE TRIGGER control_cliente
	BEFORE INSERT OR UPDATE OR DELETE ON CLIENTE
    FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'CLIENTE', 'Nuevo cliente registrado: ' || :new.NOMBRE || ' con DNI ' || :new.DNI);
		ELSIF UPDATING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'CLIENTE', ' Datos cliente modificados');
		ELSIF DELETING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'CLIENTE', 'El cliente ' || :old.NOMBRE || ' con DNI ' || :old.DNI || ' ha sido borrado' );
		END IF;
	END;
/


--Trigger de control de la tabla PEDIDO--

CREATE OR REPLACE TRIGGER control_pedido
	BEFORE INSERT OR UPDATE OR DELETE ON REGISTRO_PEDIDO
    FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_PEDIDO', 'Pedido registrado con nº: ' || :new.N_PEDIDO || ' para el DNI ' || :new.DNI);
		ELSIF UPDATING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_PEDIDO', 'Modificado pedido nº: ' || :new.N_PEDIDO) ;
		ELSIF DELETING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_PEDIDO', 'Pedido nº ' || :old.N_PEDIDO || ' con DNI ' || :old.DNI || ' ha sido borrado' );
		END IF;
	END;
/

--Trigger de control de la tabla ALBARAN--

CREATE OR REPLACE TRIGGER control_albaran
	BEFORE INSERT OR UPDATE OR DELETE ON REGISTRO_ALBARAN
    FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_ALBARAN', 'Albaran registrado con nº: ' || :new.N_ALBARAN || ' para el PEDIDO ' || :new.N_PEDIDO);
		ELSIF UPDATING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_ALBARAN', 'Modificado pedido nº: ' || :new.N_ALBARAN) ;
		ELSIF DELETING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_ALBARAN', 'Albaran nº ' || :old.N_ALBARAN || ' asociado al pedido ' || :old.N_PEDIDO || ' ha sido borrado');
		END IF;
	END;
/

--Trigger de control de la tabla FACTURA--

CREATE OR REPLACE TRIGGER control_factura
	BEFORE INSERT OR UPDATE OR DELETE ON REGISTRO_FACTURA
    FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_FACTURA', 'Factura generada con nº: ' || :new.N_FACTURA);
		ELSIF UPDATING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_FACTURA', 'Modificada factura nº: ' || :new.N_FACTURA) ;
		ELSIF DELETING THEN
			INSERT INTO auditar_empresa(USUARIO, FECHA, NOMBRE_TABLA, ACCION) VALUES(USER, SYSDATE, 'REGISTRO_FACTURA', 'Pedido nº ' || :old.N_FACTURA);
		END IF;
	END;
/

